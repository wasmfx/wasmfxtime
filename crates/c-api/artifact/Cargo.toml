[package]
name = "wasmtime-c-api"
version.workspace = true
authors.workspace = true
description = "C API to expose the Wasmtime runtime"
license = "Apache-2.0 WITH LLVM-exception"
repository = "https://github.com/bytecodealliance/wasmtime"
readme = "README.md"
edition.workspace = true
publish = false

[lib]
name = "wasmtime"
crate-type = ["staticlib", "cdylib"]
doc = false
test = false
doctest = false

[dependencies]
wasmtime-c-api = { path = '..', package = 'wasmtime-c-api-impl' }

[features]
default = [
  'profiling',
  'wat',
  'wasi',
  'cache',
  'parallel-compilation',
  'async',
  'coredump',
  'addr2line',
  'demangle',
  'threads',
  'gc',
  'cranelift',
  'winch',
  # ... if you add a line above this be sure to also change:
  #
  #   crates/c-api/CMakeLists.txt
  #   crates/c-api/Cargo.toml
]
async = ['wasmtime-c-api/async']
profiling = ["wasmtime-c-api/profiling"]
cache = ["wasmtime-c-api/cache"]
parallel-compilation = ['wasmtime-c-api/parallel-compilation']
wasi = ['wasmtime-c-api/wasi']
logging = ['wasmtime-c-api/logging']
disable-logging = ["wasmtime-c-api/disable-logging"]
coredump = ["wasmtime-c-api/coredump"]
addr2line = ["wasmtime-c-api/addr2line"]
demangle = ["wasmtime-c-api/demangle"]
wat = ["wasmtime-c-api/wat"]
threads = ["wasmtime-c-api/threads"]
gc = ["wasmtime-c-api/gc"]
cranelift = ["wasmtime-c-api/cranelift"]
winch = ["wasmtime-c-api/winch"]

# Enable unsafe mutable continuations (temporary hack to workaround
# the garbage generated by continuation objects).
unsafe_disable_continuation_linearity_check = [
  "wasmtime-c-api/unsafe_disable_continuation_linearity_check"
]

# Toggle the baseline implementation of WasmFX
wasmfx_baseline = ["wasmtime-c-api/wasmfx_baseline"]

# Toggle the WasmFX stack pooling allocator
wasmfx_pooling_allocator = ["wasmtime-c-api/wasmfx_pooling_allocator"]

# Enable the old-style unsafe malloc'd stacks
unsafe_wasmfx_stacks = ["wasmtime-c-api/unsafe_wasmfx_stacks"]


# ... if you add a line above this be sure to read the comment at the end of
# `default`
